server.port=8811


#去除html标签格式化校验
spring.thymeleaf.cache=false
spring.thymeleaf.mode=LEGACYHTML5
spring.devtools.restart.exclude=static/**,templates/**


#取出自定义的property
com.learning=范晓

#log
logging.path=/usr/local/log
logging.level.com.favorites=DEBUG
logging.level.org.springframework.web=INFO

#数据库连接
spring.datasource.url=jdbc:mysql://localhost:3306/sys
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

#jpa设置
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql= true

# Mybatis
#mybatis.config-location=classpath:/mybatis.xml
mybatis.type-aliases-package=com.springboot.learning.entity
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mapper.plugin = tk.mybatis.mapper.generator.MapperPlugin
mapper.Mapper = tk.mybatis.mapper.common.Mapper
targetModelPackage = com.springboot.learning.entity.mybatis
targetJavaProject = src/main/java
targetXMLPackage = mapper
targetResourcesProject = src/main/resources
targetMapperPackage = com.springboot.learning.dao
#mapper.mappers=com.cri.dao.mybatis
mapper.not-empty=false


# 定位模板的目录
spring.mvc.view.prefix=classpath:/templates/
# 给返回的页面添加后缀名
spring.mvc.view.suffix=.html


#队列rabbitmq
spring.application.name=spring-boot-rabbitmq
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
#spring.rabbitmq.publisher-confirms=true
#spring.rabbitmq.publisher-returns=true

#redis
#redis数据库索引
spring.redis.database=0
#服务器地址
spring.redis.host=127.0.0.1
#redis连接端口
spring.redis.port=6379
#密码
spring.redis.password=
#最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
#最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
#连接池最大空闲连接
spring.redis.pool.max-idle=8
#最小空闲连接
spring.redis.pool.min-idle=0
#连接超时
spring.redis.timeout=0


#Actuator监控配置
#start
#关闭安全开关
management.security.enabled=false 
#管理端口
management.port=8089
#Actuator访问路径
management.context-path=/monitor
endpoints.shutdown.enabled=true
info.app.name = spring-boot-actuator
info.app.version=1.0.0


#http://localhost:8089/monitor/autoconfig   使用 autoconfig 可以在应用运行时查看代码了某个配置在什么条件下生效，或者某个自动配置为什么没有生效。
#http://localhost:8089/monitor/configprops  查看配置文件中设置的属性内容，以及一些配置属性的默认值。
#http://localhost:8089/monitor/beans  根据示例就可以看出，展示了bean的别名、类型、是否单例、类的地址、依赖等信息。
#http://localhost:8089/monitor/dump   接口会生成当前线程活动的快照。这个功能非常好，方便我们在日常定位问题的时候查看线程的情况。 主要展示了线程名、线程ID、线程的状态、是否等待锁资源等信息。
#http://localhost:8089/monitor/env    展示了系统环境变量的配置信息，包括使用的环境变量、JVM 属性、命令行参数、项目使用的jar包等信息。和configprops不同的是，configprops关注于配置信息，env关注运行环境信息。
#http://localhost:8089/monitor/health  以看到 HealthEndPoint 给我们提供默认的监控结果，包含 磁盘检测和数据库检测
#http://localhost:8089/monitor/mappings  描述全部的URI路径，以及它们和控制器的映射关系
#http://localhost:8089/monitor/metrics  最重要的监控内容之一，主要监控了JVM内容使用、GC情况、类加载信息等。
#http://localhost:8089/monitor/shutdown  开启接口优雅关闭Spring Boot应用，要使用这个功能首先需要在配置文件中开启
#http://localhost:8089/monitor/trace  能报告所有Web请求的详细信息，包括请求方法、路径、时间戳以及请求和响应的头信息，记录每一次请求的详细信息。
#end

#mail属性
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=1311083901@qq.com
spring.main.password=5211314mly.
spring.mail.default-encoding=UTF-8
spring.mail.smtp.auth=true
#发送人
mail.fromMail.addr=1311083901@qq.com  



